# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Flask app to Azure Web App - pomanager

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Versión compatible con Azure Web Apps

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn  # Necesario para producción en Azure

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Configure Azure App Settings for Flask
        run: |
          az webapp config appsettings set \
            --name pomanager \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
              SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
              SUPABASE_API_KEY="${{ secrets.SUPABASE_API_KEY }}" \
              DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              FLASK_APP="app:app" \  # Cambiado a app:app para Gunicorn
              FLASK_ENV="production" \
              PYTHONPATH="/home/site/wwwroot" \
              WEBSITE_PORT=8000 \
              WEBSITES_ENABLE_APP_SERVICE_STORAGE=true

      - name: Configure Gunicorn startup
        run: |
          az webapp config set \
            --name pomanager \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --startup-file "gunicorn --bind=0.0.0.0:8000 --timeout 600 app:app"

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'pomanager'
          slot-name: 'Production'
          package: 'release.zip'